(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-select"), require("react-dom"), require("flux"), require("lodash"), require("csv-es6-data-backend"), require("dkan-es6-data-backend"), require("react-nvd3"), require("react-d3-core"), require("react-d3-map-choropleth"), require("topojson"), require("d3"), require("moment"), require("classnames"), require("fixed-data-table"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "react-select", "react-dom", "flux", "lodash", "csv-es6-data-backend", "dkan-es6-data-backend", "react-nvd3", "react-d3-core", "react-d3-map-choropleth", "topojson", "d3", "moment", "classnames", "fixed-data-table"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("react"), require("react-select"), require("react-dom"), require("flux"), require("lodash"), require("csv-es6-data-backend"), require("dkan-es6-data-backend"), require("react-nvd3"), require("react-d3-core"), require("react-d3-map-choropleth"), require("topojson"), require("d3"), require("moment"), require("classnames"), require("fixed-data-table")) : factory(root["react"], root["react-select"], root["react-dom"], root["flux"], root["lodash"], root["csv-es6-data-backend"], root["dkan-es6-data-backend"], root["react-nvd3"], root["react-d3-core"], root["react-d3-map-choropleth"], root["topojson"], root["d3"], root["moment"], root["classnames"], root["fixed-data-table"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_23__, __WEBPACK_EXTERNAL_MODULE_24__, __WEBPACK_EXTERNAL_MODULE_25__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_31__, __WEBPACK_EXTERNAL_MODULE_34__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/static/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.DashboardConstants = exports.EventDispatcher = exports.MemoryStore = exports.Dataset = exports.Geary = exports.Registry = exports.Text = exports.Table = exports.Metric = exports.Layout = exports.Goal = exports.Dashboard = exports.Choropleth = exports.Chart = exports.Card = exports.BaseComponent = exports.Autocomplete = undefined;

	var _Autocomplete = __webpack_require__(2);

	Object.defineProperty(exports, 'Autocomplete', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Autocomplete).default;
	  }
	});

	var _BaseComponent = __webpack_require__(6);

	Object.defineProperty(exports, 'BaseComponent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_BaseComponent).default;
	  }
	});

	var _Card = __webpack_require__(16);

	Object.defineProperty(exports, 'Card', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Card).default;
	  }
	});

	var _Chart = __webpack_require__(17);

	Object.defineProperty(exports, 'Chart', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Chart).default;
	  }
	});

	var _Choropleth = __webpack_require__(20);

	Object.defineProperty(exports, 'Choropleth', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Choropleth).default;
	  }
	});

	var _Dashboard = __webpack_require__(26);

	Object.defineProperty(exports, 'Dashboard', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Dashboard).default;
	  }
	});

	var _Goal = __webpack_require__(29);

	Object.defineProperty(exports, 'Goal', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Goal).default;
	  }
	});

	var _Layout = __webpack_require__(28);

	Object.defineProperty(exports, 'Layout', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Layout).default;
	  }
	});

	var _Metric = __webpack_require__(32);

	Object.defineProperty(exports, 'Metric', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Metric).default;
	  }
	});

	var _Table = __webpack_require__(33);

	Object.defineProperty(exports, 'Table', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Table).default;
	  }
	});

	var _Text = __webpack_require__(35);

	Object.defineProperty(exports, 'Text', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Text).default;
	  }
	});

	var _Registry = __webpack_require__(5);

	Object.defineProperty(exports, 'Registry', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Registry).default;
	  }
	});

	var _utils = __webpack_require__(22);

	Object.keys(_utils).forEach(function (key) {
	  if (key === "default") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _utils[key];
	    }
	  });
	});

	var _Geary = __webpack_require__(27);

	Object.defineProperty(exports, 'Geary', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Geary).default;
	  }
	});

	var _Dataset = __webpack_require__(10);

	Object.defineProperty(exports, 'Dataset', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Dataset).default;
	  }
	});

	var _MemoryStore = __webpack_require__(11);

	Object.defineProperty(exports, 'MemoryStore', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_MemoryStore).default;
	  }
	});

	var _EventDispatcher = __webpack_require__(8);

	Object.defineProperty(exports, 'EventDispatcher', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_EventDispatcher).default;
	  }
	});

	var _DashboardConstants = __webpack_require__(15);

	Object.defineProperty(exports, 'DashboardConstants', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DashboardConstants).default;
	  }
	});

	__webpack_require__(36);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactSelect = __webpack_require__(4);

	var _reactSelect2 = _interopRequireDefault(_reactSelect);

	var _Registry = __webpack_require__(5);

	var _Registry2 = _interopRequireDefault(_Registry);

	var _BaseComponent2 = __webpack_require__(6);

	var _BaseComponent3 = _interopRequireDefault(_BaseComponent2);

	var _DashboardConstants = __webpack_require__(15);

	var _DashboardConstants2 = _interopRequireDefault(_DashboardConstants);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This component is based in the react-select component https://github.com/JedWatson/react-select
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * It adds the ability to pass only the url from where options are get.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Url should have the following format: http://localhost:3004/options?q={{keyword}}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Keyword is the string to be sent to the server and retrive the available options
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * for that word.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You can override all the available properties of the original component.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For more documentation about  this component please go
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to https://github.com/JedWatson/react-select
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	var Autocomplete = function (_BaseComponent) {
	  _inherits(Autocomplete, _BaseComponent);

	  function Autocomplete(props) {
	    _classCallCheck(this, Autocomplete);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Autocomplete).call(this, props));

	    _this.state = {};
	    return _this;
	  }

	  _createClass(Autocomplete, [{
	    key: 'onChange',
	    value: function onChange(value) {
	      // The default behavior for us is change the value
	      // of the input to reflect current selections
	      this.setState({
	        value: value
	      });

	      this.emit({
	        actionType: _DashboardConstants2.default.AUTOCOMPLETE_CHANGE,
	        value: value
	      });
	    }

	    /**
	     * Load autocomplete options
	     * @param  {String}   input A text with the query to be sent to the server
	     * @param  {Function} cb    Callback to be called right after server response
	     * @return {Promise}        A promise with the request
	     */

	  }, {
	    key: 'loadOptions',
	    value: function loadOptions(input, cb) {
	      var re = /\{\{(.+)\}\}/;
	      if (this.props.url) {
	        return fetch(this.props.url.replace(re, input)).then(function (response) {
	          return response.json();
	        }).then(function (json) {
	          return { options: json };
	        });
	      } else if (this.props.options) {
	        return Promise.resolve({ options: this.props.options, isLoading: false });
	      }
	      return Promise.resolve({ options: [], isLoading: false });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(_reactSelect2.default.Async, _extends({ value: this.state.value, loadOptions: this.loadOptions.bind(this) }, this.props, { onChange: this.onChange.bind(this) }));
	    }
	  }]);

	  return Autocomplete;
	}(_BaseComponent3.default);

	exports.default = Autocomplete;


	_Registry2.default.set('Autocomplete', Autocomplete);

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = require("react");

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = require("react-select");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Registry = function () {
	  function Registry() {
	    _classCallCheck(this, Registry);
	  }

	  _createClass(Registry, null, [{
	    key: 'set',
	    value: function set(name, klass) {
	      Registry.components = Registry.components || Object.create(null);
	      Registry.components[name] = klass;
	    }
	  }, {
	    key: 'get',
	    value: function get(name) {
	      return Registry.components[name];
	    }
	  }]);

	  return Registry;
	}();

	exports.default = Registry;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(7);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _EventDispatcher = __webpack_require__(8);

	var _EventDispatcher2 = _interopRequireDefault(_EventDispatcher);

	var _Dataset = __webpack_require__(10);

	var _Dataset2 = _interopRequireDefault(_Dataset);

	var _lodash = __webpack_require__(12);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var BaseComponent = function (_Component) {
	  _inherits(BaseComponent, _Component);

	  function BaseComponent(props) {
	    _classCallCheck(this, BaseComponent);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BaseComponent).call(this, props));

	    _this.state = {
	      dataset: null,
	      queryObj: Object.assign({ size: 10, from: 0 }, _this.props.queryObj),
	      isFeching: false
	    };
	    return _this;
	  }

	  _createClass(BaseComponent, [{
	    key: 'getFetchType',
	    value: function getFetchType() {
	      return this.props.fetchData && this.props.fetchData.type;
	    }
	  }, {
	    key: 'handleResize',
	    value: function handleResize() {
	      var componentWidth = _reactDom2.default.findDOMNode(this).getBoundingClientRect().width;
	      this.setState({ componentWidth: componentWidth });
	      console.log('width', this.state.componentWidth);
	      this.onResize();
	    }
	  }, {
	    key: 'onResize',
	    value: function onResize() {
	      // noop
	      console.log('onresize');
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;

	      var type = this.getFetchType();

	      // resize magic
	      var componentWidth = _reactDom2.default.findDOMNode(this).getBoundingClientRect().width;
	      this.setState({ componentWidth: componentWidth });
	      window.addEventListener('resize', this.handleResize);

	      if (type) {

	        // fetch data is a function in the subcomponent
	        if (type === 'function' && (0, _lodash.isFunction)(this[this.props.fetchData.name])) {
	          var args = this.props.fetchData.args || [];
	          this.setState({ isFeching: true });
	          this.fetchData.apply(this, _toConsumableArray(args)).then(this.onData.bind(this));

	          // fetch data is a backend
	        } else if (type === 'backend') {
	            var dataset = new _Dataset2.default((0, _lodash.omit)(this.props.fetchData, 'type'));
	            this.setState({ isFeching: true, dataset: dataset });
	            dataset.fetch().then(function () {
	              _this2.query(_this2.state.queryObj);
	            });

	            // fetch data is an array
	          } else if (type === 'inline') {
	              this.setData(this.props.fetchData.records);
	            }
	      }

	      // Register to all the actions
	      _EventDispatcher2.default.register(this.onAction.bind(this));
	    }
	  }, {
	    key: 'onAction',
	    value: function onAction() {
	      /* IMPLEMENT */
	    }
	  }, {
	    key: 'query',
	    value: function query(_query) {
	      if (this.state.dataset) {
	        this.state.dataset.query(_query).then(this.onData.bind(this));
	        this.setState({ queryObj: _query, isFeching: true });
	      } else {
	        throw new Error("Missing dataset. You need to use a backend to query against");
	      }
	    }
	  }, {
	    key: 'onData',
	    value: function onData(data) {

	      // We create a dataset then we can perform queries against.
	      if (!this.state.dataset) {
	        this.state.dataset = new _Dataset2.default({ records: data });
	      }
	      this.setData(data);
	      this.onDataReady(data);
	    }
	  }, {
	    key: 'onDataReady',
	    value: function onDataReady(data) {
	      /* IMPLEMENT */
	    }
	  }, {
	    key: 'fetchData',
	    value: function fetchData() {
	      return Promise.resolve(this[this.props.fetchData.name]());
	    }
	  }, {
	    key: 'setData',
	    value: function setData(data) {
	      var _data = data.hits || data;
	      var _total = data.total || data.length;
	      this.setState({ data: _data, total: _total, isFeching: false });
	    }
	  }, {
	    key: 'emit',
	    value: function emit(payload) {
	      _EventDispatcher2.default.dispatch(payload);
	    }
	  }]);

	  return BaseComponent;
	}(_react.Component);

	exports.default = BaseComponent;

/***/ },
/* 7 */
/***/ function(module, exports) {

	module.exports = require("react-dom");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _flux = __webpack_require__(9);

	var EventDispatcher = new _flux.Dispatcher();

	exports.default = EventDispatcher;

/***/ },
/* 9 */
/***/ function(module, exports) {

	module.exports = require("flux");

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _MemoryStore = __webpack_require__(11);

	var _MemoryStore2 = _interopRequireDefault(_MemoryStore);

	var _csvEs6DataBackend = __webpack_require__(13);

	var _csvEs6DataBackend2 = _interopRequireDefault(_csvEs6DataBackend);

	var _dkanEs6DataBackend = __webpack_require__(14);

	var _dkanEs6DataBackend2 = _interopRequireDefault(_dkanEs6DataBackend);

	var _lodash = __webpack_require__(12);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Dataset = function () {
	  _createClass(Dataset, null, [{
	    key: 'registerBackend',
	    value: function registerBackend(name, klass) {
	      Dataset.backends = Dataset.backends || Object.create(null);
	      Dataset.backends[name] = klass;
	    }
	  }, {
	    key: 'getBackendFromName',
	    value: function getBackendFromName(name) {
	      return Dataset.backends[name];
	    }
	  }]);

	  function Dataset(settings) {
	    _classCallCheck(this, Dataset);

	    this.settings = settings;
	    this.backend = Dataset.getBackendFromName(settings.backend);
	    this._store = this.backend;
	    this.queryState = {};
	  }

	  _createClass(Dataset, [{
	    key: 'fetch',
	    value: function fetch() {
	      return this.backend.fetch((0, _lodash.omit)(this.settings, 'backend')).then(this.onFetch.bind(this));
	    }
	  }, {
	    key: 'onFetch',
	    value: function onFetch(result) {
	      this.fields = this._normalizeFields(result.fields);
	      if (result.useMemoryStore) {
	        this._store = new _MemoryStore2.default(result.records, this.fields);
	      }

	      this._store.query(this.queryState, (0, _lodash.omit)(this.settings, 'backend')).then(this.onResults.bind(this));
	    }
	  }, {
	    key: 'query',
	    value: function query(queryObj) {
	      var _this = this;

	      return new Promise(function (resolve, reject) {
	        _this._store.query(queryObj, _this.settings).then(function (data) {
	          _this.onResults(data);
	          resolve(data);
	        });
	      });
	    }
	  }, {
	    key: 'onResults',
	    value: function onResults(queryResult) {
	      this.recordCount = queryResult.total;
	      this.records = queryResult.hits;
	    }
	  }, {
	    key: '_normalizeFields',
	    value: function _normalizeFields(fields) {
	      return (0, _lodash.uniq)(fields || []).map(function (field) {
	        return { id: field };
	      });
	    }
	  }]);

	  return Dataset;
	}();

	exports.default = Dataset;


	Dataset.registerBackend('csv', _csvEs6DataBackend2.default);
	Dataset.registerBackend('dkan', _dkanEs6DataBackend2.default);

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _lodash = __webpack_require__(12);

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var MemoryStore = function () {
	  function MemoryStore(records, fields) {
	    _classCallCheck(this, MemoryStore);

	    this.records = records || [];
	    if (fields) {
	      this.fields = fields;
	    } else {
	      this.fields = (records[0] || []).map(function (value, key) {
	        return { id: key, type: 'string' };
	      });
	    }
	  }

	  _createClass(MemoryStore, [{
	    key: 'query',
	    value: function query() {
	      var _this = this;

	      var queryObj = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	      return new Promise(function (resolve, reject) {
	        var numRows = queryObj.size || _this.records.length;
	        var start = queryObj.from || 0;
	        var results = _this.records;
	        results = _this._applyFilters(results, queryObj);
	        results = _this._applyFreeTextQuery(results, queryObj);

	        var out = {
	          total: results.length,
	          hits: results.slice(start, start + numRows)
	        };
	        resolve(out);
	      });
	    }

	    // we OR across fields but AND across terms in query string

	  }, {
	    key: '_applyFreeTextQuery',
	    value: function _applyFreeTextQuery(results, queryObj) {
	      var _this2 = this;

	      if (queryObj.q) {
	        var terms = queryObj.q.split(' ');
	        var patterns = terms.map(function (term) {
	          return new RegExp(term.toLowerCase());
	        });
	        results = results.filter(function (rawdoc) {
	          var matches = true;
	          patterns.forEach(function (pattern) {
	            var foundmatch = false;
	            _this2.fields.forEach(function (field) {
	              var value = rawdoc[field.id];
	              if (value !== null && value !== undefined) {
	                value = value.toString();
	              } else {
	                // value can be null (apparently in some cases)
	                value = '';
	              }
	              // TODO regexes?
	              foundmatch = foundmatch || pattern.test(value.toLowerCase());
	              // TODO: early out (once we are true should break to spare unnecessary testing)
	              // if (foundmatch) return true;
	            });
	            matches = matches && foundmatch;
	            // TODO: early out (once false should break to spare unnecessary testing)
	            // if (!matches) return false;
	          });
	          return matches;
	        });
	      }
	      return results;
	    }
	  }, {
	    key: '_applyFilters',
	    value: function _applyFilters(results, queryObj) {
	      var filters = queryObj.filters || [];
	      var filterFunctions = {
	        term: term,
	        terms: terms,
	        range: range
	      };
	      var dataParsers = {
	        "integer": function integer(e) {
	          return parseFloat(e, 10);
	        },
	        "float": function float(e) {
	          return parseFloat(e, 10);
	        },
	        "number": function number(e) {
	          return parseFloat(e, 10);
	        },
	        "string": function string(e) {
	          return e.toString();
	        },
	        "date": function date(e) {
	          return Date.parse(e);
	        },
	        "datetime": function datetime(e) {
	          return new Date(e).valueOf();
	        }
	      };

	      var keyedFields = this.fields.reduce(function (acum, field) {
	        acum[field.id] = field;
	        return acum;
	      }, {});

	      function getDataParser(filter) {
	        var fieldType = keyedFields[filter.field].type || 'string';
	        return dataParsers[fieldType];
	      }

	      // filter records
	      return results.filter(function (record) {
	        var passes = filters.map(function (filter) {
	          return filterFunctions[filter.type](record, filter);
	        });

	        // return only these records that pass every filters
	        return (0, _lodash.every)(passes, _lodash.identity);
	      });

	      // filters definitions
	      function term(record, filter) {
	        var parse = getDataParser(filter);
	        var value = parse(record[filter.field]);
	        var term = parse(filter.term);

	        return value === term;
	      }

	      function terms(record, filter) {
	        var parse = getDataParser(filter);
	        var value = parse(record[filter.field]);
	        var terms = parse(filter.terms).split(',');

	        return terms.indexOf(value) >= 0;
	      }

	      function range(record, filter) {
	        var fromnull = (0, _lodash.isUndefined)(filter.from) || filter.from === null || filter.from === '';
	        var tonull = (0, _lodash.isUndefined)(filter.to) || filter.to === null || filter.to === '';
	        var parse = getDataParser(filter);
	        var value = parse(record[filter.field]);
	        var from = parse(fromnull ? '' : filter.from);
	        var to = parse(tonull ? '' : filter.to);

	        // if at least one end of range is set do not allow '' to get through
	        // note that for strings '' <= {any-character} e.g. '' <= 'a'
	        if ((!fromnull || !tonull) && value === '') {
	          return false;
	        }
	        return (fromnull || value >= from) && (tonull || value <= to);
	      }
	    }
	  }]);

	  return MemoryStore;
	}();

	exports.default = MemoryStore;

/***/ },
/* 12 */
/***/ function(module, exports) {

	module.exports = require("lodash");

/***/ },
/* 13 */
/***/ function(module, exports) {

	module.exports = require("csv-es6-data-backend");

/***/ },
/* 14 */
/***/ function(module, exports) {

	module.exports = require("dkan-es6-data-backend");

/***/ },
/* 15 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  STORE_CHANGE: 'STORE_CHANGE',
	  AUTOCOMPLETE_CHANGE: 'AUTOCOMPLETE_CHANGE',
	  EXECUTE: 'EXECUTE'
	};

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _Registry = __webpack_require__(5);

	var _Registry2 = _interopRequireDefault(_Registry);

	var _BaseComponent2 = __webpack_require__(6);

	var _BaseComponent3 = _interopRequireDefault(_BaseComponent2);

	var _lodash = __webpack_require__(12);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Card = function (_BaseComponent) {
	  _inherits(Card, _BaseComponent);

	  function Card() {
	    _classCallCheck(this, Card);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Card).apply(this, arguments));
	  }

	  _createClass(Card, [{
	    key: 'render',
	    value: function render() {
	      var card = (0, _lodash.pick)(this.props, 'card').card;
	      var props = (0, _lodash.omit)(this.props, 'card');
	      var header = void 0,
	          footer = void 0;

	      if (this.props.header) {
	        header = _react2.default.createElement(
	          'div',
	          { className: 'card-header' },
	          _react2.default.createElement('span', { className: this.props.iconClass, 'aria-hidden': 'true' }),
	          _react2.default.createElement(
	            'span',
	            { className: 'card-header-content' },
	            props.header
	          )
	        );
	      }

	      if (this.props.footer) {
	        footer = _react2.default.createElement(
	          'div',
	          { className: 'card-footer' },
	          props.footer
	        );
	      }

	      return _react2.default.createElement(
	        'div',
	        _extends({ className: 'card-' + props.cardStyle }, card),
	        header,
	        _react2.default.createElement(
	          'div',
	          { className: 'card-content' },
	          props.children
	        ),
	        footer
	      );
	    }
	  }]);

	  return Card;
	}(_BaseComponent3.default);

	exports.default = Card;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _Registry = __webpack_require__(5);

	var _Registry2 = _interopRequireDefault(_Registry);

	var _reactNvd = __webpack_require__(18);

	var _reactNvd2 = _interopRequireDefault(_reactNvd);

	var _BaseComponent2 = __webpack_require__(6);

	var _BaseComponent3 = _interopRequireDefault(_BaseComponent2);

	var _Loader = __webpack_require__(19);

	var _Loader2 = _interopRequireDefault(_Loader);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Chart = function (_BaseComponent) {
	  _inherits(Chart, _BaseComponent);

	  function Chart() {
	    _classCallCheck(this, Chart);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Chart).apply(this, arguments));
	  }

	  _createClass(Chart, [{
	    key: 'render',
	    value: function render() {
	      var data = this.state.data || [];
	      var settings = Object.assign({ datum: data }, this.props.settings);

	      return _react2.default.createElement(
	        _Loader2.default,
	        { isFeching: this.state.isFeching },
	        _react2.default.createElement(_reactNvd2.default, settings)
	      );
	    }
	  }]);

	  return Chart;
	}(_BaseComponent3.default);

	exports.default = Chart;


	_Registry2.default.set('Chart', Chart);

/***/ },
/* 18 */
/***/ function(module, exports) {

	module.exports = require("react-nvd3");

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _Registry = __webpack_require__(5);

	var _Registry2 = _interopRequireDefault(_Registry);

	var _BaseComponent = __webpack_require__(6);

	var _BaseComponent2 = _interopRequireDefault(_BaseComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Loader = function (_Component) {
	  _inherits(Loader, _Component);

	  function Loader() {
	    _classCallCheck(this, Loader);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Loader).apply(this, arguments));
	  }

	  _createClass(Loader, [{
	    key: 'render',
	    value: function render() {
	      var content = void 0;

	      if (this.props.isFeching) {
	        content = _react2.default.createElement(
	          'div',
	          { className: 'loader' },
	          _react2.default.createElement('div', { className: 'sp sp-slices' })
	        );
	      } else {
	        content = _react2.default.createElement(
	          'span',
	          null,
	          this.props.children
	        );
	      }
	      return content;
	    }
	  }]);

	  return Loader;
	}(_react.Component);

	exports.default = Loader;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _BaseComponent2 = __webpack_require__(6);

	var _BaseComponent3 = _interopRequireDefault(_BaseComponent2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactD3Core = __webpack_require__(21);

	var _Registry = __webpack_require__(5);

	var _Registry2 = _interopRequireDefault(_Registry);

	var _utils = __webpack_require__(22);

	var _reactD3MapChoropleth = __webpack_require__(23);

	var _topojson = __webpack_require__(24);

	var _d = __webpack_require__(25);

	var _Dataset = __webpack_require__(10);

	var _Dataset2 = _interopRequireDefault(_Dataset);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Choropleth Element for React-Dashboard
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Author Paul Walker (https://github.com/starsinmypockets)
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Based on the following projects:
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * React D3 Map Choropleth (https://github.com/react-d3/react-d3-map-choropleth)
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Apache 2.0 License
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Mike Bostock's Choropleth (https://github.com/react-d3/react-d3-map-choropleth for documentation)
	icense https://opensource.org/licenses/GPL-3.0
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                **/


	// @@TODO we need dynamic values here
	var legendWidth = 500,
	    legendHeight = 400,
	    legendMargins = { top: 40, right: 50, bottom: 40, left: 50 },
	    legendClassName = "test-legend-class",
	    legendPosition = 'left',
	    legendOffset = 90;

	// Whack some css into the page
	function addStyleString(str) {
	  var node = document.createElement('style');
	  node.innerHTML = str;
	  document.head.appendChild(node);
	}

	// Fetch css
	function fetchStyleSheet(url) {
	  return new Promise(function (resolve, reject) {
	    fetch(url).then(function (res) {
	      return res.text();
	    }).then(function (css) {
	      resolve(css);
	    }).catch(function (e) {
	      reject(e);
	    });
	  });
	}

	var Choropleth = function (_BaseComponent) {
	  _inherits(Choropleth, _BaseComponent);

	  function Choropleth(props) {
	    _classCallCheck(this, Choropleth);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Choropleth).call(this, props));

	    _this.levels = _this.props.settings.levels;
	    _this.randKey = (0, _utils.makeKey)(4);
	    _this.assignChoroplethFunctions();
	    return _this;
	  }

	  /**
	   * Override in sublass to customize behavior
	   **/


	  _createClass(Choropleth, [{
	    key: 'assignChoroplethFunctions',
	    value: function assignChoroplethFunctions() {
	      var _this2 = this;

	      var domainField = this.props.settings.domainField;
	      var _domainKey = this.props.settings.domainKey;
	      Object.assign(this, { choroplethFunctions: {
	          tooltipContent: function tooltipContent(d) {
	            var label = _this2.props.settings.tooltip.label;
	            var val = d[d[_this2.props.settings.domainMapKey]];
	            var tt = {};
	            tt[label] = val;
	            return tt;
	          },

	          domainValue: function domainValue(d) {
	            return Number(d[domainField]);
	          },

	          domainKey: function domainKey(d) {
	            return d[_domainKey];
	          },

	          mapKey: function mapKey(d) {
	            Object.assign(d, d.properties);

	            return d[_this2.props.settings.domainMapKey];
	            return d.properties[_this2.props.settings.domainMapKey]; //omainKey;
	          }
	        }
	      });
	    }

	    // fetchData should set topoData and domainData

	  }, {
	    key: 'onDataReady',
	    value: function onDataReady(data) {
	      this.setState({ domainData: data.domainData, topodata: data.topodata });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      // add stylesheet
	      if (this.props.settings.cssPath) {
	        fetchStyleSheet(this.props.settings.cssPath).then(function (css) {
	          addStyleString(css);
	        }).catch(function (e) {});
	      }

	      if (this.props.fetchData) {
	        this.fetchData().then(this.onData.bind(this)).catch(function (e) {
	          console.log('Error fetching data', e);
	        });
	      }
	      addStyleString(this.css());
	      _get(Object.getPrototypeOf(Choropleth.prototype), 'componentDidMount', this).call(this);
	    }
	  }, {
	    key: 'fetchData',
	    value: function fetchData() {
	      var _this3 = this;

	      return new Promise(function (resolve, reject) {

	        var dataset = new _Dataset2.default(_this3.props.settings.dataset);
	        var response = {};
	        fetch(_this3.props.settings.mapDataUrl).then(function (res) {
	          var d = res.json();
	          return d;
	        }).then(function (data) {
	          response.topodata = data;
	          dataset.fetch().then(function (data) {
	            dataset.query({}).then(function (data) {
	              response.domainData = data.hits;
	              return resolve(response);
	            });
	          }).catch(function (e) {
	            console.log('Dataset fetch failed', e);
	            return reject(e);
	          });
	        }).catch(function (e) {
	          return reject(e);
	        });
	      });
	    }
	  }, {
	    key: '_attachResize',
	    value: function _attachResize() {
	      window.addEventListener('resize', this._setSize.bind(this), false);
	    }

	    // generate css string from colors array

	  }, {
	    key: 'css',
	    value: function css() {
	      var _css = '';
	      var randKey = this.randKey;
	      var colors = this.props.settings.colors;
	      for (var i = 0; i < this.levels; i++) {
	        _css += '.' + randKey + i + '-' + this.levels + ' { fill:' + colors[i] + '; }';
	      }
	      return _css;
	    }
	  }, {
	    key: 'legendSeries',
	    value: function legendSeries() {
	      var series = [];
	      var domainScale = this.domainScale(this.state.domainData);
	      var step = (domainScale.domain[1] - domainScale.domain[0]) / this.props.settings.levels;
	      var r = (0, _d.range)(domainScale.domain[0], domainScale.domain[1], step);
	      r.push(domainScale.domain[1]);
	      var prec = this.props.settings.legendValPrecision;
	      for (var i = 0; i < this.levels; i++) {
	        var lower = r[i].toFixed(prec);
	        var upper = r[i + 1].toFixed(prec);
	        var item = {
	          field: lower + ' -- ' + upper,
	          name: lower + ' -- ' + upper,
	          color: this.props.settings.colors[i]
	        };
	        series.push(item);
	      }
	      return series;
	    }
	  }, {
	    key: 'domainScale',
	    value: function domainScale(data) {
	      var settings = this.props.settings;
	      var randKey = this.randKey;
	      var dScale = {
	        scale: 'quantize',
	        domain: [Number(settings.domainLower), Number(settings.domainUpper)],
	        range: (0, _d.range)(settings.levels).map(function (i) {
	          return '' + randKey + i + '-' + settings.levels;
	        })
	      };
	      return dScale;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var v = void 0;
	      var settings = Object.assign({}, this.props.settings);

	      if (this.state.domainData) {
	        Object.assign(settings, this.state.data, { type: this.props.type }, this.choroplethFunctions);

	        settings.topodata = this.state.topodata;
	        settings.domainData = this.state.domainData;

	        if (settings.mapFormat === 'topojson') {
	          if (settings.polygon) {
	            settings.dataPolygon = (0, _topojson.feature)(settings.topodata, settings.topodata.objects[settings.polygon]).features;
	          }
	          if (settings.mesh) {
	            settings.dataMesh = (0, _topojson.mesh)(settings.topodata, settings.topodata.objects[settings.mesh], function (a, b) {
	              return a !== b;
	            });
	          }
	        } else if (settings.mapFormat === 'geojson') {
	          settings.dataPolygon = settings.topodata.features;
	        }

	        settings.scale = this.props.settings.gridWidth;

	        settings.domain = this.domainScale(this.state.domainData);
	        v = _react2.default.createElement(
	          'div',
	          { className: 'choropleth-container' },
	          _react2.default.createElement(_reactD3MapChoropleth.MapChoropleth, _extends({ ref: 'choropleth' }, settings)),
	          _react2.default.createElement(
	            'div',
	            { className: 'legend-container' },
	            _react2.default.createElement(
	              'h3',
	              { className: 'legend-header' },
	              settings.legendHeader
	            ),
	            _react2.default.createElement(_reactD3Core.Legend, {
	              width: legendWidth,
	              height: legendHeight,
	              margins: legendMargins,
	              legendClassName: legendClassName,
	              legendPosition: legendPosition,
	              legendOffset: legendOffset,
	              chartSeries: this.legendSeries()
	            })
	          )
	        );
	      } else {
	        v = _react2.default.createElement(
	          'p',
	          { ref: 'choropleth', className: 'laoding' },
	          'Loading...'
	        );
	      }

	      return v;
	    }
	  }]);

	  return Choropleth;
	}(_BaseComponent3.default);

	exports.default = Choropleth;


	_Registry2.default.set('Choropleth', Choropleth);

/***/ },
/* 21 */
/***/ function(module, exports) {

	module.exports = require("react-d3-core");

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.getProp = getProp;
	exports.makeKey = makeKey;

	var _lodash = __webpack_require__(12);

	function getProp(key, object) {
	    return Object.assign({}, (0, _lodash.property)(key)(object));
	}

	function makeKey(len) {
	    var length = len || 5;
	    var text = "";
	    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

	    for (var i = 0; i < len; i++) {
	        text += possible.charAt(Math.floor(Math.random() * possible.length));
	    }return text;
	}

/***/ },
/* 23 */
/***/ function(module, exports) {

	module.exports = require("react-d3-map-choropleth");

/***/ },
/* 24 */
/***/ function(module, exports) {

	module.exports = require("topojson");

/***/ },
/* 25 */
/***/ function(module, exports) {

	module.exports = require("d3");

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _Geary = __webpack_require__(27);

	var _Geary2 = _interopRequireDefault(_Geary);

	var _Registry = __webpack_require__(5);

	var _Registry2 = _interopRequireDefault(_Registry);

	var _BaseComponent2 = __webpack_require__(6);

	var _BaseComponent3 = _interopRequireDefault(_BaseComponent2);

	var _EventDispatcher = __webpack_require__(8);

	var _EventDispatcher2 = _interopRequireDefault(_EventDispatcher);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Dashboard = function (_BaseComponent) {
	  _inherits(Dashboard, _BaseComponent);

	  function Dashboard(props) {
	    _classCallCheck(this, Dashboard);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Dashboard).call(this, props));

	    _this.state = { data: [] };
	    return _this;
	  }

	  _createClass(Dashboard, [{
	    key: 'render',
	    value: function render() {
	      var layout = typeof this.props.layout === 'string' ? _Registry2.default.get(this.props.layout) : this.props.layout;
	      if (!layout) throw new Error('Missing layout class ' + this.props.layout);
	      var props = Object.assign({ globalData: this.state.data || [] }, this.props);

	      return _react2.default.createElement(
	        'div',
	        { className: 'container' },
	        _react2.default.createElement(
	          'h1',
	          { className: 'dashboard-title' },
	          this.props.title
	        ),
	        _react2.default.createElement(layout, props)
	      );
	    }
	  }]);

	  return Dashboard;
	}(_BaseComponent3.default);

	exports.default = Dashboard;

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _Layout2 = __webpack_require__(28);

	var _Layout3 = _interopRequireDefault(_Layout2);

	var _Registry = __webpack_require__(5);

	var _Registry2 = _interopRequireDefault(_Registry);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Geary = function (_Layout) {
	  _inherits(Geary, _Layout);

	  function Geary() {
	    _classCallCheck(this, Geary);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Geary).apply(this, arguments));
	  }

	  _createClass(Geary, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'container' },
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'col-md-12' },
	            this.renderRegion(this.props.regions.top)
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'col-md-4' },
	            this.renderRegion(this.props.regions.left)
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'col-md-4' },
	            this.renderRegion(this.props.regions.middle)
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'col-md-4' },
	            this.renderRegion(this.props.regions.right)
	          )
	        )
	      );
	    }
	  }]);

	  return Geary;
	}(_Layout3.default);

	exports.default = Geary;


	_Registry2.default.set('Geary', Geary);

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _Chart = __webpack_require__(17);

	var _Chart2 = _interopRequireDefault(_Chart);

	var _Card = __webpack_require__(16);

	var _Card2 = _interopRequireDefault(_Card);

	var _Registry = __webpack_require__(5);

	var _Registry2 = _interopRequireDefault(_Registry);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Layout = function (_Component) {
	  _inherits(Layout, _Component);

	  function Layout() {
	    _classCallCheck(this, Layout);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Layout).apply(this, arguments));
	  }

	  _createClass(Layout, [{
	    key: 'renderRegion',
	    value: function renderRegion(elements) {
	      var _this2 = this;

	      if (!elements) return;
	      return elements.map(function (element, key) {
	        var props = Object.assign({ globalData: _this2.props.globalData }, element);
	        // Attach global state and contexts to nested components
	        return _react2.default.createElement(
	          _Card2.default,
	          _extends({ key: key }, element),
	          _react2.default.createElement(_Registry2.default.get(element.type), props)
	        );
	      });
	    }
	  }]);

	  return Layout;
	}(_react.Component);

	exports.default = Layout;


	_Registry2.default.set('Layout', Layout);

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _Registry = __webpack_require__(5);

	var _Registry2 = _interopRequireDefault(_Registry);

	var _BaseComponent2 = __webpack_require__(6);

	var _BaseComponent3 = _interopRequireDefault(_BaseComponent2);

	var _Loader = __webpack_require__(19);

	var _Loader2 = _interopRequireDefault(_Loader);

	var _lodash = __webpack_require__(12);

	var _d = __webpack_require__(25);

	var _reactNvd = __webpack_require__(18);

	var _reactNvd2 = _interopRequireDefault(_reactNvd);

	var _moment = __webpack_require__(30);

	var _moment2 = _interopRequireDefault(_moment);

	var _classnames = __webpack_require__(31);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Goal = function (_BaseComponent) {
	  _inherits(Goal, _BaseComponent);

	  function Goal(props) {
	    _classCallCheck(this, Goal);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Goal).call(this, props));

	    _this.state = {
	      metric: 0,
	      showEndNumber: _this.props.showEndNumber === false ? false : true,
	      dateFormat: _this.props.dateFormat || 'MMMM Do YYYY',
	      numberFormat: _this.props.numberFormat || '.0f'
	    };
	    return _this;
	  }

	  _createClass(Goal, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      _get(Object.getPrototypeOf(Goal.prototype), 'componentDidMount', this).call(this);

	      // If doesn't need to fetch data then use the global data
	      if (!this.props.fetchData) this.onDataReady(this.props.globalData);
	    }
	  }, {
	    key: 'onDataReady',
	    value: function onDataReady(data) {
	      this.setState({ metric: this.getMetric(data) });
	    }
	  }, {
	    key: 'getMetric',
	    value: function getMetric(data) {
	      return this[this.props.metric](data);
	    }
	  }, {
	    key: 'getTolerance',
	    value: function getTolerance(distance, actionCondition) {
	      var tolerance = this.props.tolerance;
	      var dist = Math.abs(distance);
	      return tolerance.filter(function (t) {
	        return actionCondition || dist > t.from && dist <= t.to;
	      });
	    }
	  }, {
	    key: 'trackStatus',
	    value: function trackStatus() {
	      var startDate = Date.parse(this.props.startDate);
	      var endDate = Date.parse(this.props.endDate);
	      var startNumber = Number(this.props.startNumber);
	      var endNumber = Number(this.props.endNumber);
	      var tracker = this.getTracker(startDate, endDate, startNumber, endNumber);
	      var projection = tracker(Date.now());
	      var distance = projection - this.state.metric;
	      var actionContitions = {
	        increase: distance <= 0,
	        decrease: distance >= 0,
	        maintain_above: distance <= 0,
	        maintain_below: distance >= 0,
	        maintain: true,
	        mesure: true
	      };
	      return this.getTolerance(distance, actionContitions[this.props.action]);
	    }
	  }, {
	    key: 'getTracker',
	    value: function getTracker(startDate, endDate, startNumber, endNumber) {
	      return function (date) {
	        // Straight line equation
	        var m = (endNumber - startNumber) / (endDate - startDate);
	        var y = m * (date - startDate);
	        return y;
	      };
	    }
	  }, {
	    key: 'formatNumber',
	    value: function formatNumber(n) {
	      var format = (0, _d.format)(this.state.numberFormat);
	      return format(n);
	    }
	  }, {
	    key: 'formatDate',
	    value: function formatDate(date) {
	      return (0, _moment2.default)(date.toISOString()).format(this.state.dateFormat);
	    }
	  }, {
	    key: 'formatActionName',
	    value: function formatActionName(action) {
	      return (0, _lodash.capitalize)(this.props.action.replace('_', ' '));
	    }
	  }, {
	    key: 'getCaption',
	    value: function getCaption() {
	      var params = {
	        'action': this.formatActionName(this.props.action),
	        'caption': this.props.caption,
	        'startNumber': this.formatNumber(this.props.startNumber),
	        'endNumber': this.formatNumber(this.props.endNumber),
	        'startDate': this.formatDate(new Date(this.props.startDate)),
	        'endDate': this.formatDate(new Date(this.props.endDate))
	      };
	      var compiled = (0, _lodash.template)(this.props.captionTemplates[this.props.action]);
	      return compiled(params);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var status = Object.assign({}, (0, _lodash.head)(this.trackStatus()));
	      var style = {
	        background: this.props.background
	      };
	      var spline = void 0,
	          endNumber = void 0;

	      style = Object.assign({}, style, this.props.style);

	      // Adds the spline chart
	      if (this.props.spline) {
	        var splineSettings = Object.assign({}, this.props.spline);
	        spline = _react2.default.createElement(_reactNvd2.default, _extends({ type: 'sparklinePlus', datum: this.state.data, showLastValue: false, color: ['#333333'] }, splineSettings));
	      }

	      // This allows to show either a single number or a progress in the following format: number / total
	      if (this.state.showEndNumber) {
	        endNumber = _react2.default.createElement(
	          'span',
	          { className: 'card-goal-end-number' },
	          ' ',
	          this.props.divider,
	          ' ',
	          this.formatNumber(this.props.endNumber)
	        );
	      }

	      return _react2.default.createElement(
	        _Loader2.default,
	        { isFeching: this.props.isFeching },
	        _react2.default.createElement(
	          'div',
	          { className: 'goal', style: style },
	          _react2.default.createElement(
	            'div',
	            { className: 'row' },
	            _react2.default.createElement(
	              'div',
	              { className: 'col-md-4' },
	              _react2.default.createElement(
	                'div',
	                { className: 'card-goal-icon' },
	                _react2.default.createElement('span', { className: (0, _classnames2.default)('glyphicon', this.props.icon) })
	              )
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'col-md-8' },
	              _react2.default.createElement(
	                'div',
	                { className: 'card-goal-caption' },
	                this.getCaption()
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'row' },
	            _react2.default.createElement(
	              'div',
	              { className: 'col-md-4' },
	              _react2.default.createElement(
	                'div',
	                { className: 'card-goal-progress' },
	                _react2.default.createElement(
	                  'span',
	                  { className: 'card-goal-metric' },
	                  this.formatNumber(this.state.metric)
	                ),
	                endNumber
	              )
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'col-md-8' },
	              _react2.default.createElement(
	                'div',
	                { className: 'card-goal-status' },
	                _react2.default.createElement(
	                  'a',
	                  { style: { color: status.color }, href: this.props.link },
	                  status.label
	                )
	              ),
	              _react2.default.createElement(
	                'div',
	                { className: 'card-goal-end-date' },
	                this.formatDate(new Date(this.props.endDate))
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'row' },
	            _react2.default.createElement(
	              'div',
	              { className: 'col-md-12' },
	              _react2.default.createElement(
	                'div',
	                { className: 'spline' },
	                spline
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return Goal;
	}(_BaseComponent3.default);

	Goal.defaultProps = {
	  captionTemplates: {
	    'increase': '${action} ${caption} ${endNumber} by ${endDate}',
	    'decrease': '${action} ${caption} ${endNumber} by ${endDate}',
	    'maintain': '${action} at ${endNumber} ${caption} by ${endDate}',
	    'maintain_above': '${action} ${endNumber} ${caption} by ${endDate}',
	    'maintain_below': '${action} ${endNumber} ${caption} by ${endDate}',
	    'mesure': '${caption}'
	  },
	  divider: ' / ',
	  style: {
	    color: 'black',
	    background: 'white'
	  }
	};
	exports.default = Goal;


	_Registry2.default.set('Goal', Goal);

/***/ },
/* 30 */
/***/ function(module, exports) {

	module.exports = require("moment");

/***/ },
/* 31 */
/***/ function(module, exports) {

	module.exports = require("classnames");

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _Registry = __webpack_require__(5);

	var _Registry2 = _interopRequireDefault(_Registry);

	var _BaseComponent2 = __webpack_require__(6);

	var _BaseComponent3 = _interopRequireDefault(_BaseComponent2);

	var _Loader = __webpack_require__(19);

	var _Loader2 = _interopRequireDefault(_Loader);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Metric = function (_BaseComponent) {
	  _inherits(Metric, _BaseComponent);

	  function Metric(props) {
	    _classCallCheck(this, Metric);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Metric).call(this, props));

	    _this.state = {
	      metric: 0,
	      caption: props.caption
	    };
	    return _this;
	  }

	  _createClass(Metric, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      _get(Object.getPrototypeOf(Metric.prototype), 'componentDidMount', this).call(this);

	      // If doesn't need to fetch data then use the global data
	      if (!this.props.fetchData) this.onDataReady(this.props.globalData);
	    }
	  }, {
	    key: 'onDataReady',
	    value: function onDataReady(data) {
	      this.setState({ metric: this.getMetric(data) });
	    }
	  }, {
	    key: 'getMetric',
	    value: function getMetric(data) {
	      return this[this.props.metric](data);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var style = {
	        background: this.props.background
	      };
	      style = Object.assign({}, style, this.props.style);
	      return _react2.default.createElement(
	        _Loader2.default,
	        { isFeching: this.state.isFeching },
	        _react2.default.createElement(
	          'div',
	          { className: 'metric', style: style },
	          _react2.default.createElement(
	            'div',
	            { className: 'col-sm-3 col-lg-4' },
	            _react2.default.createElement(
	              'div',
	              { className: 'card-metric-icon' },
	              _react2.default.createElement('span', { className: 'glyphicon glyphicon-user' })
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'col-sm-9 col-lg-8' },
	            _react2.default.createElement(
	              'div',
	              { className: 'card-metric-number' },
	              this.state.metric
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'card-metric-caption' },
	              this.state.caption
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return Metric;
	}(_BaseComponent3.default);

	exports.default = Metric;


	_Registry2.default.set('Metric', Metric);

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _fixedDataTable = __webpack_require__(34);

	var _Registry = __webpack_require__(5);

	var _Registry2 = _interopRequireDefault(_Registry);

	var _utils = __webpack_require__(22);

	var _Dataset = __webpack_require__(10);

	var _Dataset2 = _interopRequireDefault(_Dataset);

	var _BaseComponent2 = __webpack_require__(6);

	var _BaseComponent3 = _interopRequireDefault(_BaseComponent2);

	var _Loader = __webpack_require__(19);

	var _Loader2 = _interopRequireDefault(_Loader);

	var _lodash = __webpack_require__(12);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Table = function (_BaseComponent) {
	  _inherits(Table, _BaseComponent);

	  function Table(props) {
	    _classCallCheck(this, Table);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Table).call(this, props));

	    _this.state = {
	      gridWidth: 1,
	      gridHeight: 1,
	      rowsPerPage: _this.props.rowsPerPage,
	      currentPage: 1,
	      queryObj: {
	        size: _this.props.queryObj.size,
	        from: _this.props.queryObj.from
	      }
	    };

	    return _this;
	  }

	  _createClass(Table, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this._attachResize();
	      this._setSize();
	      _get(Object.getPrototypeOf(Table.prototype), 'componentDidMount', this).call(this);
	    }
	  }, {
	    key: 'getPages',
	    value: function getPages(size, total, current) {
	      var totalPages = this.getTotalPages(size, total);
	      var displayedPages = 10;
	      var centroid = displayedPages / 2;
	      var start = void 0,
	          end = void 0;

	      // If range is out of bounds to the left
	      if (current - centroid <= 0) {
	        start = current - centroid <= 0 ? 1 : current - centroid;
	        end = Math.min(displayedPages, totalPages);

	        // If range is out of bounds to the right
	      } else if (current + centroid > totalPages) {
	          start = Math.max(totalPages - displayedPages, 1);
	          end = current + centroid > totalPages ? totalPages : current + centroid;

	          // If range is within bounds
	        } else {
	            start = current - centroid;
	            end = current + centroid;
	          }
	      return (0, _lodash.range)(start, end + 1);
	    }
	  }, {
	    key: 'getPageNumbers',
	    value: function getPageNumbers(size, total, current) {
	      var _this2 = this;

	      return this.getPages(size, total, current).map(function (pageNumber) {
	        return _react2.default.createElement(
	          'li',
	          {
	            className: pageNumber == _this2.state.currentPage ? 'active' : '',
	            key: 'page-' + pageNumber },
	          _react2.default.createElement(
	            'a',
	            {
	              onClick: (0, _lodash.partialRight)(_this2._onPageChange, pageNumber).bind(_this2),
	              href: '#' },
	            pageNumber
	          )
	        );
	      });
	    }
	  }, {
	    key: 'getLastPage',
	    value: function getLastPage(size, total) {
	      var pages = getTotalPages(size, total);
	      return pages[pages.length - 1];
	    }
	  }, {
	    key: 'getTotalPages',
	    value: function getTotalPages(size, total) {
	      return Math.ceil(total / size);
	    }
	  }, {
	    key: '_setSize',
	    value: function _setSize() {
	      var _refs$table = this.refs.table;
	      var offsetWidth = _refs$table.offsetWidth;
	      var offsetHeight = _refs$table.offsetHeight;

	      this.setState({
	        gridWidth: offsetWidth,
	        gridHeight: offsetHeight
	      });
	    }
	  }, {
	    key: '_attachResize',
	    value: function _attachResize() {
	      window.addEventListener('resize', this._setSize.bind(this), false);
	    }
	  }, {
	    key: '_onPageChange',
	    value: function _onPageChange(e, id, mouseEvent, pageNumber) {
	      e.preventDefault();
	      var rpp = this.state.rowsPerPage;
	      var query = Object.assign({}, this.state.queryObj, {
	        size: rpp,
	        from: pageNumber * rpp - rpp
	      });
	      this.query(query);
	      this.setState({ currentPage: pageNumber, queryObj: query });
	    }
	  }, {
	    key: '_onFilterChange',
	    value: function _onFilterChange(e) {
	      var rpp = this.state.rowsPerPage;
	      var query = Object.assign({}, this.state.queryObj, {
	        size: rpp,
	        from: this.state.currentPage * rpp - rpp,
	        q: e.target.value
	      });
	      this.query(query);
	      this.setState({ currentPage: 1, queryObj: query });
	    }
	  }, {
	    key: '_onRowsPerPageChange',
	    value: function _onRowsPerPageChange(e) {
	      var query = Object.assign({}, this.state.queryObj);
	      query.size = Number(e.target.value);
	      query.from = 0;
	      this.query(query);
	      this.setState({ rowsPerPage: Number(e.target.value), queryObj: query, currentPage: 1 });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _state = this.state;
	      var gridWidth = _state.gridWidth;
	      var gridHeight = _state.gridHeight;

	      var data = this.state.data || [];
	      var tableDefaultProps = (0, _utils.getProp)('settings.table', this.props);
	      var columnDefaultProps = (0, _utils.getProp)('settings.columns', this.props);
	      var cellsDefaultProps = (0, _utils.getProp)('settings.cells', this.props);
	      var headers = Object.keys(data[0] || {});
	      var totalPages = this.getTotalPages(this.state.rowsPerPage, this.state.total);
	      var content = void 0;

	      // Create the colums
	      var columns = headers.map(function (header) {
	        var overrides = (0, _utils.getProp)('overrides.' + header, columnDefaultProps);
	        return _react2.default.createElement(_fixedDataTable.Column, _extends({
	          header: _react2.default.createElement(
	            _fixedDataTable.Cell,
	            null,
	            header
	          ),
	          key: header,
	          columnKey: header,
	          cell: function cell(props) {
	            var overrides = (0, _utils.getProp)('overrides.' + props.rowIndex, cellsDefaultProps);
	            return _react2.default.createElement(
	              _fixedDataTable.Cell,
	              _extends({}, props, cellsDefaultProps, overrides),
	              data[props.rowIndex][props.columnKey]
	            );
	          }
	        }, columnDefaultProps, overrides));
	      });

	      // Return the renderable elements
	      return _react2.default.createElement(
	        _Loader2.default,
	        { isFeching: this.state.isFeching },
	        _react2.default.createElement(
	          'div',
	          { ref: 'table' },
	          _react2.default.createElement(
	            'div',
	            { className: 'row' },
	            _react2.default.createElement(
	              'div',
	              { className: 'col-md-10' },
	              _react2.default.createElement(
	                'div',
	                { className: 'form-group' },
	                _react2.default.createElement('input', {
	                  onChange: this._onFilterChange.bind(this),
	                  placeholder: 'Filter',
	                  className: 'form-control'
	                })
	              )
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'col-md-2' },
	              _react2.default.createElement(
	                'div',
	                { onChange: this._onRowsPerPageChange.bind(this), className: 'form-group' },
	                _react2.default.createElement(
	                  'select',
	                  { className: 'form-control' },
	                  _react2.default.createElement(
	                    'option',
	                    { value: '10' },
	                    '10'
	                  ),
	                  _react2.default.createElement(
	                    'option',
	                    { value: '25' },
	                    '25'
	                  ),
	                  _react2.default.createElement(
	                    'option',
	                    { value: '50' },
	                    '50'
	                  ),
	                  _react2.default.createElement(
	                    'option',
	                    { value: '100' },
	                    '100'
	                  ),
	                  _react2.default.createElement(
	                    'option',
	                    { value: '500' },
	                    '500'
	                  )
	                )
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'table-container' },
	            _react2.default.createElement(
	              _fixedDataTable.Table,
	              _extends({ rowsCount: data.length }, tableDefaultProps, { width: gridWidth }),
	              columns
	            )
	          ),
	          _react2.default.createElement(
	            'nav',
	            null,
	            _react2.default.createElement(
	              'ul',
	              { className: 'pagination' },
	              _react2.default.createElement(
	                'li',
	                { className: this.state.currentPage === 1 ? 'hide' : '' },
	                _react2.default.createElement(
	                  'a',
	                  { onClick: (0, _lodash.partialRight)(this._onPageChange, 1).bind(this), href: '#', 'aria-label': 'Previous' },
	                  _react2.default.createElement(
	                    'span',
	                    { 'aria-hidden': 'true' },
	                    '«'
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                { className: this.state.currentPage === 1 ? 'hide' : '' },
	                _react2.default.createElement(
	                  'a',
	                  { onClick: (0, _lodash.partialRight)(this._onPageChange, this.state.currentPage - 1).bind(this), href: '#', 'aria-label': 'Previous' },
	                  _react2.default.createElement(
	                    'span',
	                    { 'aria-hidden': 'true' },
	                    '«'
	                  )
	                )
	              ),
	              this.getPageNumbers(this.state.rowsPerPage, this.state.total, this.state.currentPage),
	              _react2.default.createElement(
	                'li',
	                { className: !totalPages || this.state.currentPage === totalPages ? 'hide' : '' },
	                _react2.default.createElement(
	                  'a',
	                  { onClick: (0, _lodash.partialRight)(this._onPageChange, this.state.currentPage + 1).bind(this), href: '#', 'aria-label': 'Next' },
	                  _react2.default.createElement(
	                    'span',
	                    { 'aria-hidden': 'true' },
	                    '»'
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                { className: !totalPages || this.state.currentPage === totalPages ? 'hide' : '' },
	                _react2.default.createElement(
	                  'a',
	                  { onClick: (0, _lodash.partialRight)(this._onPageChange, totalPages).bind(this), href: '#', 'aria-label': 'Next' },
	                  _react2.default.createElement(
	                    'span',
	                    { 'aria-hidden': 'true' },
	                    '»'
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return Table;
	}(_BaseComponent3.default);

	Table.defaultProps = {
	  rowsPerPage: 10,
	  queryObj: {
	    size: 10,
	    from: 0
	  }
	};
	exports.default = Table;


	_Registry2.default.set('Table', Table);

/***/ },
/* 34 */
/***/ function(module, exports) {

	module.exports = require("fixed-data-table");

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _Registry = __webpack_require__(5);

	var _Registry2 = _interopRequireDefault(_Registry);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Text = function (_Component) {
	  _inherits(Text, _Component);

	  function Text() {
	    _classCallCheck(this, Text);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Text).apply(this, arguments));
	  }

	  _createClass(Text, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement('div', { dangerouslySetInnerHTML: { __html: this.props.content } });
	    }
	  }]);

	  return Text;
	}(_react.Component);

	exports.default = Text;


	_Registry2.default.set('Text', Text);

/***/ },
/* 36 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ }
/******/ ])
});
;